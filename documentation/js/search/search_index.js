var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.168,1,2.298]],["body/controllers/AppController.html",[0,1.753,1,3.449,2,1.35,3,0.305,4,0.269,5,0.269,6,3.356,7,0.691,8,1.642,9,4.357,10,3.964,11,3.38,12,1.541,13,0.025,14,0.913,15,3.964,16,1.442,17,0.797,18,0.797,19,1.265,20,1.265,21,1.871,22,0.44,23,2.22,24,0.742,25,3.199,26,3.356,27,2.295,28,0.305,29,0.088,30,1.541,31,3.964,32,3.964,33,2.22,34,2.22,35,2.22,36,2.22,37,2.22,38,1.265,39,3.964,40,0.018,41,0.018]],["title/modules/AppModule.html",[42,1.168,43,2.298]],["body/modules/AppModule.html",[1,3.368,2,1.479,3,0.237,4,0.209,5,0.209,13,0.025,22,0.489,24,0.578,25,3.339,26,2.612,28,0.237,29,0.069,40,0.016,41,0.016,42,1.712,43,4.565,44,1.376,45,1.376,46,1.595,47,1.595,48,1.376,49,2.598,50,1.595,51,2.612,52,2.612,53,2.612,54,3.638,55,3.638,56,3.638,57,3.638,58,3.638,59,1.784,60,2.245,61,1.595,62,1.595,63,3.085,64,3.238,65,3.085,66,3.085,67,3.085,68,3.085,69,3.085,70,3.085,71,3.085]],["title/injectables/AppService.html",[25,1.919,72,0.789]],["body/injectables/AppService.html",[3,0.352,4,0.31,5,0.31,7,0.796,8,1.797,9,5.392,13,0.025,14,1.052,20,1.458,21,2.048,22,0.352,24,0.856,25,3.152,28,0.352,29,0.102,38,1.458,40,0.02,41,0.02,72,1.296,73,1.901,74,3.869,75,4.569,76,4.569,77,4.569]],["title/controllers/AuthController.html",[0,1.168,78,2.298]],["body/controllers/AuthController.html",[0,0.899,2,0.899,3,0.203,4,0.179,5,0.179,7,0.46,8,1.239,11,3.518,12,1.789,13,0.025,14,1.06,16,1.674,17,0.925,18,0.925,19,1.469,20,1.469,22,0.435,23,2.578,24,0.494,27,1.177,28,0.203,29,0.059,30,1.026,33,2.578,34,2.578,35,2.578,36,2.578,37,2.578,38,1.469,40,0.014,41,0.014,78,2.602,79,2.235,80,1.61,81,3.881,82,2.085,83,3.286,84,3.286,85,3.881,86,2.235,87,2.842,88,3.881,89,2.639,90,2.112,91,1.789,92,2.235,93,2.842,94,3.881,95,2.639,96,2.639,97,2.639,98,2.639,99,1.968,100,1.968,101,1.968,102,1.968,103,1.769,104,2.235,105,2.38,106,1.968,107,3.286,108,1.61,109,0.693,110,2.235,111,1.478,112,1.61,113,2.639,114,2.639,115,2.639,116,2.639,117,2.639,118,2.639,119,2.639,120,2.639,121,2.235,122,2.639,123,2.639,124,2.235]],["title/modules/AuthModule.html",[42,1.168,54,2.091]],["body/modules/AuthModule.html",[2,1.614,3,0.269,4,0.238,5,0.238,13,0.025,22,0.477,24,0.656,28,0.269,29,0.078,40,0.017,41,0.017,42,1.83,44,1.561,45,1.561,46,1.81,47,1.81,48,1.561,49,2.777,50,1.81,54,4.031,59,1.855,60,2.45,61,1.81,62,1.81,64,2.61,78,3.6,105,3.205,106,2.61,125,2.964,126,2.964,127,3.782,128,3.5,129,3.5,130,1.456,131,3.5,132,2.61,133,3.5,134,3.5,135,3.5,136,2.135,137,3.5,138,2.964,139,3.5,140,3.5,141,3.5]],["title/injectables/AuthService.html",[72,0.789,105,1.772]],["body/injectables/AuthService.html",[3,0.19,4,0.167,5,0.167,7,0.43,8,1.179,13,0.025,14,1.131,16,1.786,17,0.987,18,0.987,19,1.568,20,1.412,22,0.405,24,0.462,28,0.19,29,0.055,38,1.412,40,0.013,41,0.013,59,1.469,72,0.85,73,1.027,82,2.048,83,3.127,84,3.127,86,3.127,87,2.75,90,1.841,91,1.72,92,3.127,93,2.75,105,1.909,110,2.09,130,1.027,132,1.84,142,2.09,143,3.693,144,2.068,145,2.468,146,5.721,147,2.468,148,2.475,149,2.468,150,2.468,151,3.693,152,1.089,153,2.468,154,1.089,155,2.253,156,2.09,157,3.127,158,3.693,159,2.646,160,3.693,161,2.468,162,2.699,163,2.552,164,3.693,165,2.699,166,2.068,167,3.693,168,2.468,169,2.468,170,1.183,171,2.468,172,1.654,173,2.468,174,2.468,175,2.468,176,2.468,177,2.468,178,2.253,179,2.468,180,3.127,181,2.468,182,2.09,183,2.468,184,2.468,185,2.754,186,2.468,187,2.468,188,2.468,189,2.468,190,2.468,191,2.468]],["title/classes/CreateItem.html",[29,0.076,192,1.643]],["body/classes/CreateItem.html",[3,0.288,4,0.254,5,0.254,13,0.025,17,0.751,18,0.751,21,2.15,22,0.288,28,0.473,29,0.131,40,0.018,41,0.018,109,0.982,152,1.513,154,1.454,192,2.374,193,1.36,194,2.094,195,2.15,196,3.319,197,2.621,198,1.668,199,2.506,200,1.933,201,2.506,202,2.281,203,2.281,204,2.281,205,2.281,206,2.281,207,1.668,208,2.094,209,2.281,210,2.506,211,2.506,212,2.281,213,1.933,214,2.281,215,2.506,216,1.793,217,2.506,218,1.793,219,2.506]],["title/classes/CreateRoom.html",[29,0.076,220,1.772]],["body/classes/CreateRoom.html",[3,0.33,4,0.291,5,0.291,13,0.024,17,0.862,21,2.265,22,0.33,28,0.456,29,0.132,40,0.019,41,0.019,109,1.127,152,1.332,154,1.532,193,1.561,195,2.157,197,2.496,198,1.914,200,2.219,220,2.799,221,2.876,222,4.037,223,2.618,224,2.403,225,2.618,226,2.219,227,3.2]],["title/classes/ItemIdDTO.html",[29,0.076,218,1.643]],["body/classes/ItemIdDTO.html",[3,0.288,4,0.254,5,0.254,13,0.025,17,0.751,18,0.751,21,2.15,22,0.288,28,0.473,29,0.131,40,0.018,41,0.018,109,0.982,152,1.513,154,1.454,192,1.793,193,1.36,194,2.094,195,2.15,196,2.506,197,2.621,198,1.668,199,2.506,200,1.933,201,2.506,202,2.281,203,2.281,204,2.281,205,2.281,206,2.281,207,1.668,208,2.094,209,2.281,210,2.506,211,2.506,212,2.281,213,1.933,214,2.281,215,2.506,216,1.793,217,2.506,218,2.374,219,3.319]],["title/classes/Items.html",[29,0.076,207,1.529]],["body/classes/Items.html",[3,0.208,4,0.183,5,0.183,7,0.47,12,2.432,13,0.025,14,1.44,17,0.937,18,1.301,19,1.259,21,2.195,22,0.208,28,0.42,29,0.114,40,0.014,41,0.014,109,0.709,152,1.539,154,1.342,192,1.293,193,0.981,194,1.51,195,1.695,196,1.808,197,2.634,198,1.203,199,1.808,200,1.394,201,1.808,202,1.645,203,1.645,204,1.645,205,1.645,206,1.645,207,1.759,208,2.61,209,2.844,210,3.125,211,3.125,212,2.844,213,2.41,214,2.844,215,2.643,216,1.293,217,1.808,218,1.293,219,1.808,228,2.039,229,2.697,230,2.697,231,2.697,232,2.697,233,2.697,234,2.697,235,2.697,236,2.697,237,2.697,238,2.697]],["title/controllers/ItemsController.html",[0,1.168,239,2.298]],["body/controllers/ItemsController.html",[0,0.725,2,0.725,3,0.164,4,0.144,5,0.144,7,0.371,8,1.053,11,3.561,12,1.914,13,0.025,14,1.134,16,1.79,17,0.989,18,0.989,19,1.571,20,1.571,22,0.401,23,2.547,24,0.399,27,0.949,28,0.164,29,0.047,30,0.827,33,2.757,34,2.757,35,2.757,36,2.757,37,2.757,38,1.452,40,0.012,41,0.012,80,1.298,82,2.147,90,1.372,91,1.768,99,1.587,100,1.587,101,1.587,102,2.459,103,2.707,104,1.801,107,2.792,108,1.298,109,0.559,111,1.191,112,1.298,121,1.801,154,1.119,185,3.393,192,2.181,207,0.949,216,2.181,218,2.605,239,2.211,240,1.801,241,2.012,242,2.261,243,1.847,244,1.847,245,2.464,246,1.426,247,2.128,248,1.298,249,2.459,250,2.128,251,1.801,252,2.128,253,2.128,254,2.459,255,2.128,256,1.426,257,3.298,258,2.128,259,2.459,260,1.587,261,1.847,262,1.801,263,1.801,264,2.128,265,2.128,266,2.128,267,2.128,268,2.128,269,1.801,270,2.128,271,1.801,272,2.128,273,2.128,274,1.587,275,2.128]],["title/modules/ItemsModule.html",[42,1.168,55,2.091]],["body/modules/ItemsModule.html",[2,1.748,3,0.304,4,0.268,5,0.268,13,0.025,22,0.465,24,0.74,28,0.304,29,0.088,40,0.018,41,0.018,42,1.942,44,1.761,45,1.761,46,2.041,47,2.041,48,1.761,49,2.948,50,2.041,55,4.04,59,1.919,60,2.653,61,2.041,62,2.041,130,1.642,239,3.822,261,3.592,262,3.343,276,3.343,277,3.343,278,3.948,279,3.948]],["title/injectables/ItemsService.html",[72,0.789,261,1.919]],["body/injectables/ItemsService.html",[3,0.165,4,0.146,5,0.146,7,0.374,8,1.06,13,0.025,14,1.203,16,1.798,17,1.095,18,0.993,19,1.577,20,1.577,22,0.312,24,0.402,28,0.165,29,0.048,30,0.834,38,1.577,40,0.012,41,0.012,59,1.563,72,0.764,73,0.893,82,2.151,90,2.174,91,1.921,130,0.893,136,3.526,144,1.202,154,1.286,155,1.309,159,2.37,162,2.477,163,2.039,165,1.309,166,1.859,170,1.592,178,1.309,185,3.897,192,1.029,209,1.309,212,1.309,213,1.11,216,1.029,218,2.831,224,1.202,225,1.309,241,2.026,242,1.859,243,2.559,244,1.859,245,2.026,246,2.226,248,2.026,256,2.226,261,1.859,263,1.817,280,1.817,281,1.438,282,2.146,283,2.146,284,2.146,285,2.146,286,2.476,287,2.146,288,2.146,289,2.146,290,1.817,291,1.817,292,3.32,293,2.476,294,4.061,295,2.476,296,1.817,297,1.817,298,2.146,299,3.32,300,2.146,301,2.146,302,2.146,303,2.146,304,2.146,305,2.146,306,2.146,307,2.146,308,3.438,309,2.146,310,3.32,311,2.146,312,2.226,313,2.146,314,1.817]],["title/injectables/JwtGuard.html",[72,0.789,112,2.091]],["body/injectables/JwtGuard.html",[3,0.369,4,0.325,5,0.325,13,0.024,22,0.446,24,0.897,28,0.369,29,0.107,40,0.021,41,0.021,72,1.334,73,1.993,112,3.535,195,2.108,315,4.056,316,5.795,317,4.791,318,3.573]],["title/injectables/JwtStrategy.html",[72,0.789,127,2.091]],["body/injectables/JwtStrategy.html",[3,0.257,4,0.226,5,0.226,7,0.581,8,1.463,13,0.025,14,1.056,16,1.667,17,0.921,18,0.921,19,1.463,20,1.064,22,0.455,24,0.625,27,1.487,28,0.257,29,0.074,30,1.296,38,1.064,40,0.016,41,0.016,72,1.056,73,1.387,82,1.784,91,1.296,105,3.159,106,2.487,111,1.867,127,2.797,138,2.823,144,1.867,154,0.821,156,3.881,159,1.599,162,3.196,163,1.487,166,1.867,170,1.599,195,1.667,213,1.724,318,2.487,319,2.823,320,4.584,321,4.435,322,4.584,323,3.335,324,3.335,325,4.584,326,3.335,327,3.335,328,3.335,329,3.335,330,3.335,331,2.823,332,3.335,333,3.335,334,3.335,335,3.335,336,2.823,337,3.335,338,3.335,339,3.335,340,3.335,341,3.335,342,3.335,343,3.335]],["title/classes/LoginDTO.html",[29,0.076,87,1.919]],["body/classes/LoginDTO.html",[3,0.336,4,0.296,5,0.296,13,0.025,21,1.991,22,0.336,28,0.421,29,0.122,40,0.02,41,0.02,87,3.065,93,2.445,109,1.147,136,3.647,152,1.075,165,2.664,172,2.927,178,3.647,193,1.588,195,1.991,197,2.436,198,1.948,344,3.257,345,4.634,346,5.062]],["title/controllers/MovementRequestController.html",[0,1.168,347,2.298]],["body/controllers/MovementRequestController.html",[0,0.867,2,0.867,3,0.196,4,0.173,5,0.173,7,0.443,8,1.206,11,3.58,12,1.751,13,0.025,14,1.148,16,1.813,17,1.002,18,1.002,19,1.591,20,1.591,22,0.384,23,2.523,24,0.477,27,1.135,28,0.196,29,0.057,30,0.989,33,2.792,34,2.792,35,2.792,36,2.792,37,2.792,38,1.438,40,0.014,41,0.014,80,1.552,82,2.159,91,1.751,108,1.552,109,0.668,111,1.425,152,1.373,154,1.227,159,1.22,163,1.135,207,1.135,241,2.305,242,2.523,248,1.552,249,2.817,254,2.817,259,1.897,274,1.897,347,2.532,348,2.154,349,2.154,350,3.777,351,3.777,352,2.544,353,2.544,354,2.544,355,2.544,356,2.544,357,2.544,358,2.544,359,2.115,360,2.154,361,2.544,362,2.544,363,2.544,364,2.544,365,2.544,366,2.544,367,2.544,368,2.544,369,2.544]],["title/modules/MovementRequestModule.html",[42,1.168,56,2.091]],["body/modules/MovementRequestModule.html",[2,1.739,3,0.301,4,0.266,5,0.266,13,0.025,22,0.463,24,0.734,28,0.301,29,0.087,40,0.018,41,0.018,42,1.935,44,1.747,45,1.747,46,2.025,47,2.025,48,1.747,49,2.937,50,2.025,56,4.033,59,1.915,60,2.64,61,2.025,62,2.025,64,2.921,130,1.629,347,3.808,359,3.584,360,3.316,370,3.316,371,3.316,372,3.917,373,3.917]],["title/injectables/MovementRequestService.html",[72,0.789,359,1.919]],["body/injectables/MovementRequestService.html",[3,0.189,4,0.166,5,0.166,7,0.427,8,1.172,11,1.898,13,0.025,14,1.267,16,1.602,17,0.885,18,0.885,19,1.406,20,1.673,22,0.283,24,0.459,28,0.189,29,0.054,30,0.952,38,1.562,40,0.013,41,0.013,59,1.646,72,0.846,73,1.019,82,2.204,90,1.019,91,1.712,124,2.074,130,1.019,136,2.24,144,1.372,152,1.354,154,1.354,155,1.494,159,2.346,163,2.183,166,2.056,170,1.761,207,2.183,213,1.266,214,2.687,243,2.74,244,2.056,245,1.494,281,1.642,291,2.074,296,2.074,308,2.074,312,2.461,336,2.074,349,4.832,359,2.056,374,2.074,375,4.893,376,3.672,377,4.893,378,2.449,379,2.449,380,3.672,381,2.449,382,2.449,383,3.672,384,2.449,385,2.449,386,2.449,387,3.672,388,2.449,389,2.449,390,2.449,391,2.449,392,2.074,393,2.449,394,2.449,395,2.449,396,3.672,397,3.672,398,2.449,399,2.449,400,2.449]],["title/injectables/PrismaService.html",[59,1.025,72,0.789]],["body/injectables/PrismaService.html",[3,0.333,4,0.294,5,0.294,7,0.754,8,1.737,13,0.025,14,0.997,20,1.382,22,0.419,24,0.811,28,0.333,29,0.096,40,0.02,41,0.02,59,1.628,72,1.253,73,1.801,82,2.028,163,1.931,195,1.98,401,3.665,402,5.042,403,6.571,404,4.329,405,3.665,406,4.329,407,4.329]],["title/classes/RegisterDTO.html",[29,0.076,93,1.919]],["body/classes/RegisterDTO.html",[3,0.293,4,0.259,5,0.259,7,0.664,12,2.179,13,0.025,14,1.291,18,1.126,21,2.166,22,0.293,28,0.386,29,0.112,40,0.018,41,0.018,87,2.134,93,2.808,109,1.001,136,3.876,152,1.234,165,3.42,172,3.757,178,3.633,193,1.386,195,1.386,197,2.315,198,1.7,228,2.593,344,2.842,345,3.227,346,4.746,408,5.605,409,3.811,410,3.811,411,3.811]],["title/classes/RoomIdDto.html",[29,0.076,226,1.772]],["body/classes/RoomIdDto.html",[3,0.33,4,0.291,5,0.291,13,0.024,17,0.862,21,2.265,22,0.33,28,0.456,29,0.132,40,0.019,41,0.019,109,1.127,152,1.332,154,1.532,193,1.561,195,2.157,197,2.496,198,1.914,200,2.219,220,2.219,221,2.876,222,3.2,223,2.618,224,2.403,225,2.618,226,2.799,227,4.037]],["title/controllers/RoomsController.html",[0,1.168,412,2.298]],["body/controllers/RoomsController.html",[0,0.731,2,0.731,3,0.165,4,0.146,5,0.146,7,0.374,8,1.06,11,3.569,12,1.921,13,0.025,14,1.138,16,1.798,17,0.993,18,0.993,19,1.577,20,1.577,22,0.38,23,2.768,24,0.402,27,0.957,28,0.165,29,0.048,30,0.834,33,2.768,34,2.768,35,2.768,36,2.768,37,2.768,38,1.577,40,0.012,41,0.012,80,1.309,82,2.151,90,2.267,91,1.921,99,1.6,100,1.6,101,1.6,102,2.476,103,2.722,108,1.309,109,0.564,111,1.202,152,1.286,154,1.125,220,2.363,226,2.363,241,2.026,242,2.274,243,1.859,244,1.859,245,2.477,246,1.438,248,1.309,249,2.476,251,1.817,254,2.476,256,1.438,259,2.476,260,3.028,269,1.817,271,1.817,274,1.6,286,2.476,412,2.226,413,1.817,414,2.146,415,2.146,416,2.146,417,2.146,418,2.146,419,2.146,420,1.859,421,1.817,422,1.817,423,2.146,424,2.146,425,2.146,426,2.146,427,2.146,428,2.146,429,2.146,430,2.146]],["title/classes/RoomsDTO.html",[29,0.076,223,2.091]],["body/classes/RoomsDTO.html",[3,0.272,4,0.24,5,0.24,7,0.616,12,2.247,13,0.025,14,1.39,17,1.085,18,1.213,19,1.523,21,2.351,22,0.272,28,0.416,29,0.12,40,0.017,41,0.017,109,0.929,152,1.485,154,1.485,193,1.287,195,1.736,197,2.546,198,1.578,200,1.829,220,1.829,221,2.371,222,2.638,223,2.912,224,3.024,225,3.295,226,1.829,227,2.638,228,2.467,431,3.538,432,3.538,433,3.538,434,3.538,435,3.538]],["title/modules/RoomsModule.html",[42,1.168,57,2.091]],["body/modules/RoomsModule.html",[2,1.748,3,0.304,4,0.268,5,0.268,13,0.025,22,0.465,24,0.74,28,0.304,29,0.088,40,0.018,41,0.018,42,1.942,44,1.761,45,1.761,46,2.041,47,2.041,48,1.761,49,2.948,50,2.041,57,4.04,59,1.919,60,2.653,61,2.041,62,2.041,130,1.642,412,3.822,420,3.592,421,3.343,436,3.343,437,3.343,438,3.948,439,3.948]],["title/injectables/RoomsService.html",[72,0.789,420,1.919]],["body/injectables/RoomsService.html",[3,0.196,4,0.173,5,0.173,7,0.444,8,1.208,13,0.025,14,1.286,16,1.939,17,1.072,18,1.072,19,1.702,20,1.702,22,0.347,24,0.478,28,0.196,29,0.057,30,0.992,38,1.702,40,0.014,41,0.014,59,1.671,72,0.871,73,1.061,82,2.22,90,2.471,91,2.073,130,1.061,144,1.428,152,1.374,154,1.423,155,1.556,159,1.815,163,1.688,166,2.119,170,1.815,220,2.581,226,2.581,241,2.309,242,2.119,243,2.795,244,2.119,245,2.309,246,2.537,248,2.309,256,2.537,281,1.71,286,2.822,290,2.16,295,4.166,312,2.537,420,2.119,422,2.16,440,2.16,441,2.551,442,2.551,443,2.551,444,2.551,445,2.551,446,2.551,447,2.551,448,2.551,449,2.551,450,2.551,451,3.785,452,2.551]],["title/classes/SupplierDTO.html",[29,0.076,453,2.298]],["body/classes/SupplierDTO.html",[3,0.336,4,0.296,5,0.296,7,0.761,12,2.128,13,0.025,14,1.26,17,1.201,18,1.1,21,2.28,22,0.336,28,0.336,29,0.097,40,0.02,41,0.02,109,1.147,193,1.588,197,2.509,228,2.83,453,3.669,454,3.698,455,4.458,456,4.367,457,4.367]],["title/classes/UpdateItem.html",[29,0.076,216,1.643]],["body/classes/UpdateItem.html",[3,0.289,4,0.255,5,0.255,13,0.025,17,0.754,18,0.754,21,2.153,22,0.289,28,0.474,29,0.132,40,0.018,41,0.018,109,0.986,152,1.515,154,1.369,192,1.799,193,1.365,194,2.101,195,2.153,196,2.516,197,2.622,198,1.674,199,2.516,200,1.94,201,2.516,202,2.29,203,2.29,204,2.29,205,2.29,206,2.29,207,1.674,208,2.101,209,2.29,210,2.516,211,2.516,212,2.29,213,1.94,214,2.29,215,2.516,216,2.38,217,3.328,218,1.799,219,2.516]],["title/classes/UserDTO.html",[29,0.076,458,2.556]],["body/classes/UserDTO.html",[3,0.357,4,0.314,5,0.314,7,0.807,12,1.801,13,0.025,14,1.067,18,0.931,22,0.357,28,0.357,29,0.103,40,0.02,41,0.02,109,1.217,152,1.397,154,1.511,193,1.685,197,2.387,228,2.936,458,4.234,459,3.923,460,4.634]],["title/controllers/UsersController.html",[0,1.168,461,2.298]],["body/controllers/UsersController.html",[0,0.762,2,0.762,3,0.172,4,0.152,5,0.152,7,0.39,8,1.095,11,3.581,12,1.959,13,0.025,14,1.16,16,1.833,17,1.012,18,1.012,19,1.608,20,1.608,22,0.36,23,2.821,24,0.419,27,0.999,28,0.172,29,0.05,30,0.87,33,2.821,34,2.821,35,2.821,36,2.821,37,2.821,38,1.608,40,0.012,41,0.012,80,1.366,82,2.168,90,2.096,91,1.959,103,1.5,108,1.366,109,0.588,111,1.253,152,1.44,154,1.026,242,1.253,260,1.669,293,1.669,297,1.895,461,2.299,462,1.895,463,3.43,464,2.904,465,3.43,466,2.904,467,2.904,468,3.43,469,3.43,470,2.238,471,2.904,472,3.43,473,2.238,474,3.43,475,3.43,476,2.238,477,2.238,478,3.43,479,2.238,480,2.904,481,3.43,482,2.238,483,1.92,484,1.895,485,2.238,486,2.238,487,2.238,488,2.238,489,2.238,490,2.238,491,2.238,492,2.238,493,2.238]],["title/modules/UsersModule.html",[42,1.168,58,2.091]],["body/modules/UsersModule.html",[2,1.748,3,0.304,4,0.268,5,0.268,13,0.025,22,0.465,24,0.74,28,0.304,29,0.088,40,0.018,41,0.018,42,1.942,44,1.761,45,1.761,46,2.041,47,2.041,48,1.761,49,2.948,50,2.041,58,4.04,59,1.919,60,2.653,61,2.041,62,2.041,130,1.642,461,3.822,483,3.592,484,3.343,494,3.343,495,3.343,496,3.948,497,3.948]],["title/injectables/UsersService.html",[72,0.789,483,1.919]],["body/injectables/UsersService.html",[3,0.172,4,0.152,5,0.152,7,0.389,8,1.093,13,0.025,14,1.398,16,1.831,17,1.067,18,1.011,19,1.606,20,1.905,22,0.32,24,0.418,28,0.172,29,0.05,30,0.868,38,1.606,40,0.012,41,0.012,59,1.589,72,0.788,73,0.929,82,2.32,90,2.3,91,1.957,130,0.929,144,1.251,152,1.439,154,1.439,155,1.363,159,1.071,162,2.54,163,0.996,166,1.251,170,1.071,243,2.614,244,2.614,281,1.497,312,1.497,314,1.891,453,3.129,455,1.666,464,2.899,466,3.952,467,2.899,471,2.899,480,2.899,483,1.917,498,1.891,499,3.424,500,4.668,501,4.668,502,3.424,503,4.668,504,2.233,505,3.424,506,2.233,507,2.233,508,2.233,509,2.233,510,2.233,511,2.233,512,2.233,513,2.233,514,3.424,515,2.233,516,2.233,517,2.233,518,2.233,519,3.424,520,2.233,521,2.233,522,2.233,523,2.233]],["title/coverage.html",[524,3.484]],["body/coverage.html",[0,1.926,1,1.769,5,0.179,6,2.235,13,0.025,18,0.53,25,1.478,27,1.177,29,0.14,40,0.014,41,0.014,48,1.177,59,0.79,72,1.41,74,2.235,78,1.769,79,2.235,87,1.478,93,1.478,105,1.365,112,1.61,127,1.61,142,2.235,148,1.769,170,1.265,192,1.265,194,2.842,207,1.177,216,1.265,218,1.265,220,1.365,221,3.086,223,1.61,226,1.365,239,1.769,240,2.235,261,1.478,280,2.235,315,2.235,319,2.235,344,2.894,347,1.769,348,2.235,359,1.478,374,2.235,392,2.235,401,2.235,412,1.769,413,2.235,420,1.478,440,2.235,453,1.769,454,2.235,458,1.968,459,2.235,461,1.769,462,2.235,483,1.478,498,2.235,524,1.968,525,2.639,526,2.639,527,2.639,528,5.86,529,5.075,530,3.881,531,3.881,532,6.311,533,3.881,534,2.639,535,5.075,536,4.603,537,2.235,538,4.603,539,2.235,540,2.639,541,2.639,542,3.286,543,3.286,544,3.286,545,2.235,546,2.639]],["title/dependencies.html",[45,1.838,547,2.427]],["body/dependencies.html",[13,0.025,24,0.774,29,0.117,40,0.019,41,0.019,45,1.842,109,1.085,132,3.08,157,3.497,318,3.08,321,3.497,331,4.473,405,3.497,548,5.826,549,4.13,550,4.13,551,4.13,552,4.13,553,4.13,554,4.13,555,4.13,556,5.283,557,5.283,558,4.13,559,4.13,560,4.13,561,4.13,562,4.13,563,4.13,564,4.13,565,4.13,566,4.13,567,4.13,568,4.13,569,4.13,570,4.13,571,4.13,572,4.13]],["title/miscellaneous/enumerations.html",[573,1.605,574,3.489]],["body/miscellaneous/enumerations.html",[7,0.877,13,0.024,40,0.021,41,0.021,194,2.819,202,3.642,203,3.072,204,3.072,205,3.072,206,3.072,573,2.819,574,4.263,575,5.035,576,5.055]],["title/miscellaneous/functions.html",[573,1.605,577,3.489]],["body/miscellaneous/functions.html",[7,0.91,13,0.022,40,0.022,41,0.022,48,2.882,539,4.421,573,2.924,577,4.421,578,5.222]],["title/index.html",[7,0.499,579,2.866,580,2.866]],["body/index.html",[4,0.228,13,0.024,40,0.017,41,0.017,148,3.087,208,1.88,224,1.88,524,2.504,581,3.357,582,3.357,583,4.605,584,3.357,585,3.357,586,3.357,587,3.357,588,3.357,589,5.257,590,3.357,591,3.357,592,3.357,593,3.357,594,5.928,595,6.271,596,3.357,597,4.605,598,3.357,599,4.605,600,3.357,601,3.357,602,3.357,603,3.357,604,4.605,605,3.357,606,3.357,607,3.357,608,3.357,609,3.357,610,6.123,611,3.357,612,3.357,613,4.605,614,3.357,615,3.357,616,3.357,617,3.357,618,4.605,619,4.605,620,3.357,621,3.357,622,3.357,623,4.605,624,4.605,625,3.357,626,3.357,627,3.357,628,3.357,629,3.357,630,2.843,631,3.357,632,3.357,633,3.357,634,3.357,635,3.357,636,3.357,637,3.357,638,3.357,639,3.357,640,3.357,641,2.843,642,3.357,643,3.357,644,3.357,645,3.357,646,3.357,647,3.357,648,2.843]],["title/modules.html",[44,2.084]],["body/modules.html",[13,0.02,40,0.02,41,0.02,43,3.121,44,2.077,54,2.84,55,2.84,56,2.84,57,2.84,58,2.84,630,5.664,649,6.69,650,6.69,651,6.69]],["title/overview.html",[652,3.955]],["body/overview.html",[2,1.071,13,0.025,25,2.843,40,0.016,41,0.016,42,1.071,43,4.536,44,1.402,45,1.402,46,1.625,47,1.625,48,1.402,49,1.625,50,1.625,51,2.662,52,2.662,53,2.662,54,3.896,55,3.757,56,3.757,57,3.757,58,3.757,59,1.88,60,2.275,61,1.625,62,1.625,73,1.308,105,2.625,125,2.662,126,2.662,127,3.097,193,1.143,261,2.843,276,2.662,277,2.662,359,2.843,370,2.662,371,2.662,420,2.843,436,2.662,437,2.662,483,2.843,494,2.662,495,2.662,652,2.662,653,4.4,654,3.144,655,3.144]],["title/properties.html",[228,2.13,547,2.427]],["body/properties.html",[13,0.025,40,0.022,41,0.022,208,2.878,228,2.657,641,4.352,648,4.352,656,5.14,657,5.14,658,5.14]],["title/miscellaneous/variables.html",[573,1.605,659,3.489]],["body/miscellaneous/variables.html",[7,0.579,13,0.025,17,0.919,27,2.04,38,1.061,40,0.016,41,0.016,82,1.132,90,2.175,148,3.066,152,0.818,159,2.832,162,2.79,163,2.513,165,2.028,170,2.507,172,3.066,178,2.028,180,3.872,182,2.814,224,1.861,225,2.028,293,3.411,295,3.411,402,2.814,455,2.478,528,2.814,537,2.814,542,2.814,543,4.427,544,4.427,545,3.872,573,1.861,576,4.427,659,2.814,660,3.323,661,4.573,662,5.229,663,3.323,664,3.323,665,3.323,666,3.323,667,3.323,668,3.323,669,3.323,670,3.323,671,3.323,672,3.323,673,3.323,674,4.573,675,3.323,676,3.323,677,3.323,678,3.323,679,3.323,680,3.323,681,3.323,682,3.323,683,3.323,684,3.323,685,3.323]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":657,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0650",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.list",{"_index":390,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["10",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":655,"title":{},"body":{"overview.html":{}}}],["1122233",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.if",{"_index":393,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["2h",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["3.14.2",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["5.19.1",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":653,"title":{},"body":{"overview.html":{}}}],["7.4.2",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["8.13.0",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":654,"title":{},"body":{"overview.html":{}}}],["access",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["accesstoken",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":225,"title":{},"body":{"classes/CreateRoom.html":{},"injectables/ItemsService.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"miscellaneous/variables.html":{}}}],["addsupplier",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["addsupplier(data",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["amazing",{"_index":631,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{}}}],["apiproperty",{"_index":197,"title":{},"body":{"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{}}}],["apiproperty({required",{"_index":408,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["apitags",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('items",{"_index":265,"title":{},"body":{"controllers/ItemsController.html":{}}}],["apitags('movementrequest",{"_index":361,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["apitags('rooms",{"_index":423,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apitags('users",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":608,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":588,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":43,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approvedby",{"_index":399,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":78,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":317,"title":{},"body":{"injectables/JwtGuard.html":{}}}],["authguard('jwt",{"_index":316,"title":{},"body":{"injectables/JwtGuard.html":{}}}],["authmodule",{"_index":54,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":641,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":105,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["availbility",{"_index":214,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"injectables/MovementRequestService.html":{},"classes/UpdateItem.html":{}}}],["await",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":632,"title":{},"body":{"index.html":{}}}],["barang_sekali_pakai",{"_index":206,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{},"miscellaneous/enumerations.html":{}}}],["barang_stok",{"_index":204,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{},"miscellaneous/enumerations.html":{}}}],["bcrypt",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(data.password",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bisa",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MovementRequestService.html":{}}}],["body",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/RoomsController.html":{}}}],["boolean",{"_index":215,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{}}}],["bootstrap",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":651,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":649,"title":{},"body":{"modules.html":{}}}],["building",{"_index":224,"title":{},"body":{"classes/CreateRoom.html":{},"injectables/ItemsService.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":29,"title":{"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":193,"title":{},"body":{"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_itemsmodule",{"_index":276,"title":{},"body":{"modules/ItemsModule.html":{},"overview.html":{}}}],["cluster_itemsmodule_providers",{"_index":277,"title":{},"body":{"modules/ItemsModule.html":{},"overview.html":{}}}],["cluster_movementrequestmodule",{"_index":370,"title":{},"body":{"modules/MovementRequestModule.html":{},"overview.html":{}}}],["cluster_movementrequestmodule_providers",{"_index":371,"title":{},"body":{"modules/MovementRequestModule.html":{},"overview.html":{}}}],["cluster_roomsmodule",{"_index":436,"title":{},"body":{"modules/RoomsModule.html":{},"overview.html":{}}}],["cluster_roomsmodule_providers",{"_index":437,"title":{},"body":{"modules/RoomsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":494,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":495,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["coba",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compose",{"_index":601,"title":{},"body":{"index.html":{}}}],["console.log(items",{"_index":388,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["const",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MovementRequestService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(prisma",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(prismaservice",{"_index":281,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["container",{"_index":598,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('items",{"_index":266,"title":{},"body":{"controllers/ItemsController.html":{}}}],["controller('movement",{"_index":362,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["controller('rooms",{"_index":424,"title":{},"body":{"controllers/RoomsController.html":{}}}],["controller('users",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":524,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":241,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["create(@body",{"_index":271,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RoomsController.html":{}}}],["create(@req",{"_index":368,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["create(data",{"_index":246,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["create(request",{"_index":352,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["created_at",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["createitem",{"_index":192,"title":{"classes/CreateItem.html":{}},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"classes/UpdateItem.html":{},"coverage.html":{}}}],["createmovement",{"_index":375,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["createroom",{"_index":220,"title":{"classes/CreateRoom.html":{}},"body":{"classes/CreateRoom.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"coverage.html":{}}}],["createsupplier",{"_index":463,"title":{},"body":{"controllers/UsersController.html":{}}}],["createsupplier(data",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["data",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data.id",{"_index":290,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RoomsService.html":{}}}],["data.name",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.password",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.phone",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.username",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":599,"title":{},"body":{"index.html":{}}}],["datas",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{}}}],["datas.name",{"_index":302,"title":{},"body":{"injectables/ItemsService.html":{}}}],["datas.quantity",{"_index":306,"title":{},"body":{"injectables/ItemsService.html":{}}}],["datas.room.name",{"_index":305,"title":{},"body":{"injectables/ItemsService.html":{}}}],["datas.status",{"_index":307,"title":{},"body":{"injectables/ItemsService.html":{}}}],["datas.users.username",{"_index":303,"title":{},"body":{"injectables/ItemsService.html":{}}}],["datausername",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"classes/RegisterDTO.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"classes/SupplierDTO.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":242,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":249,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{}}}],["delete('supplier",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(@param",{"_index":274,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{}}}],["delete(id",{"_index":248,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["deletemovement",{"_index":376,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["deletemovement(id",{"_index":380,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["deletesupplier",{"_index":464,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletesupplier(id",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":45,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":208,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":609,"title":{},"body":{"index.html":{}}}],["devrunning",{"_index":607,"title":{},"body":{"index.html":{}}}],["di",{"_index":391,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["diisi",{"_index":397,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["disable",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/RoomsController.html":{}}}],["docker",{"_index":597,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["drunning",{"_index":603,"title":{},"body":{"index.html":{}}}],["dto/auth",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/items",{"_index":263,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{}}}],["dto/rooms",{"_index":422,"title":{},"body":{"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["dto/supplier",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["e2e",{"_index":620,"title":{},"body":{"index.html":{}}}],["editsupplier",{"_index":465,"title":{},"body":{"controllers/UsersController.html":{}}}],["editsupplier(id",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["efficient",{"_index":584,"title":{},"body":{"index.html":{}}}],["enum",{"_index":201,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{}}}],["enumerations",{"_index":574,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/RoomsController.html":{}}}],["example",{"_index":594,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":195,"title":{},"body":{"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"classes/UpdateItem.html":{}}}],["extractjwt",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/MovementRequestService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filename",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":243,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["findall(@req",{"_index":269,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RoomsController.html":{}}}],["findall(request",{"_index":251,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RoomsController.html":{}}}],["findallsupplier",{"_index":466,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findallsupplier(@req",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{}}}],["findallsupplier(request",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone",{"_index":244,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["findone(@req",{"_index":268,"title":{},"body":{"controllers/ItemsController.html":{}}}],["findone(data",{"_index":286,"title":{},"body":{"injectables/ItemsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["findone(id",{"_index":383,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["findone(request",{"_index":253,"title":{},"body":{"controllers/ItemsController.html":{}}}],["findonesupplier",{"_index":467,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonesupplier(id",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["format",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":312,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":583,"title":{},"body":{"index.html":{}}}],["function",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":577,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":254,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{}}}],["get('supplier",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('supplier/:id",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('tes",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('tes')@apibearerauth()@useguards(jwtguard",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["getall",{"_index":350,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["getall(@req",{"_index":364,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["getall(request",{"_index":355,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello(@req",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello(request",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getone",{"_index":351,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["getone(@param",{"_index":366,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["getone(id",{"_index":357,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["getting",{"_index":579,"title":{"index.html":{}},"body":{}}],["global",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["grow",{"_index":627,"title":{},"body":{"index.html":{}}}],["gudang",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hashpassword",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["hello",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":638,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":645,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["httpstatus.unauthorized",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["id.id",{"_index":310,"title":{},"body":{"injectables/ItemsService.html":{}}}],["identifier",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":406,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MovementRequestModule.html":{}}}],["include",{"_index":292,"title":{},"body":{"injectables/ItemsService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":72,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["inputby",{"_index":212,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"classes/UpdateItem.html":{}}}],["inputname",{"_index":301,"title":{},"body":{"injectables/ItemsService.html":{}}}],["insert",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["installation",{"_index":593,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":596,"title":{},"body":{"index.html":{}}}],["item",{"_index":308,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{}}}],["itemiddto",{"_index":218,"title":{"classes/ItemIdDTO.html":{}},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"classes/UpdateItem.html":{},"coverage.html":{}}}],["items",{"_index":207,"title":{"classes/Items.html":{}},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"classes/UpdateItem.html":{},"coverage.html":{}}}],["items.controller",{"_index":279,"title":{},"body":{"modules/ItemsModule.html":{}}}],["items.service",{"_index":262,"title":{},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{}}}],["items/items.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["itemscontroller",{"_index":239,"title":{"controllers/ItemsController.html":{}},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"coverage.html":{}}}],["itemservice",{"_index":267,"title":{},"body":{"controllers/ItemsController.html":{}}}],["itemsmodule",{"_index":55,"title":{"modules/ItemsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ItemsModule.html":{},"modules.html":{},"overview.html":{}}}],["itemsservice",{"_index":261,"title":{"injectables/ItemsService.html":{}},"body":{"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"coverage.html":{},"overview.html":{}}}],["itemtype",{"_index":202,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{},"miscellaneous/enumerations.html":{}}}],["jl.telekomunikasi",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":634,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.guard",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt.strategy",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtguard",{"_index":112,"title":{"injectables/JwtGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"injectables/JwtGuard.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":127,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":642,"title":{},"body":{"index.html":{}}}],["legend",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":648,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":624,"title":{},"body":{"index.html":{}}}],["log",{"_index":299,"title":{},"body":{"injectables/ItemsService.html":{}}}],["logger",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.info",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["logger.warn",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["login",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":87,"title":{"classes/LoginDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"coverage.html":{}}}],["logs/app.log",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":394,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["matching",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["migrate",{"_index":604,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":573,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":623,"title":{},"body":{"index.html":{}}}],["mode",{"_index":613,"title":{},"body":{"index.html":{}}}],["module",{"_index":42,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":44,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":637,"title":{},"body":{"index.html":{}}}],["movement",{"_index":349,"title":{},"body":{"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{}}}],["movement_request.controller",{"_index":373,"title":{},"body":{"modules/MovementRequestModule.html":{}}}],["movement_request.service",{"_index":360,"title":{},"body":{"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{}}}],["movement_request/movement_request.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["movementrequestcontroller",{"_index":347,"title":{"controllers/MovementRequestController.html":{}},"body":{"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"coverage.html":{}}}],["movementrequestmodule",{"_index":56,"title":{"modules/MovementRequestModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MovementRequestModule.html":{},"modules.html":{},"overview.html":{}}}],["movementrequestservice",{"_index":359,"title":{"injectables/MovementRequestService.html":{}},"body":{"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"coverage.html":{},"overview.html":{}}}],["movementservice",{"_index":363,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["msg",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["myśliwiec",{"_index":643,"title":{},"body":{"index.html":{}}}],["nama",{"_index":398,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["name",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":589,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":647,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":318,"title":{},"body":{"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MovementRequestService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":582,"title":{},"body":{"index.html":{}}}],["non_reduce",{"_index":205,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{},"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('item",{"_index":311,"title":{},"body":{"injectables/ItemsService.html":{}}}],["notfoundexception('movement",{"_index":387,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["notfoundexception('room",{"_index":451,"title":{},"body":{"injectables/RoomsService.html":{}}}],["notfoundexception('user",{"_index":314,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/UsersService.html":{}}}],["npm",{"_index":595,"title":{},"body":{"index.html":{}}}],["npx",{"_index":606,"title":{},"body":{"index.html":{}}}],["null",{"_index":400,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["number",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["omittype",{"_index":198,"title":{},"body":{"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"classes/UpdateItem.html":{}}}],["omittype(items",{"_index":196,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{}}}],["omittype(registerdto",{"_index":345,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["omittype(roomsdto",{"_index":222,"title":{},"body":{"classes/CreateRoom.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{}}}],["onmoduleinit",{"_index":403,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":625,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["orm",{"_index":605,"title":{},"body":{"index.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":652,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":547,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":259,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":199,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{}}}],["partialtype(items",{"_index":217,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{}}}],["passport",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":260,"title":{},"body":{"controllers/ItemsController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":257,"title":{},"body":{"controllers/ItemsController.html":{}}}],["patch('supplier",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{}}}],["pending",{"_index":395,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["pg",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":455,"title":{},"body":{"classes/SupplierDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["picktype",{"_index":200,"title":{},"body":{"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"classes/UpdateItem.html":{}}}],["picktype(items",{"_index":219,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{}}}],["picktype(roomsdto",{"_index":227,"title":{},"body":{"classes/CreateRoom.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{}}}],["please",{"_index":635,"title":{},"body":{"index.html":{}}}],["post",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["post('login",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('supplier",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["prettier/prettier",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/RoomsController.html":{}}}],["prisma",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prisma.room.create",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma.supplier.create",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.users.create",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/adapter",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["prisma/client",{"_index":405,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":402,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismaservice",{"_index":59,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.secret_key",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":615,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":581,"title":{},"body":{"index.html":{}}}],["project",{"_index":626,"title":{},"body":{"index.html":{}}}],["properties",{"_index":228,"title":{"properties.html":{}},"body":{"classes/Items.html":{},"classes/RegisterDTO.html":{},"classes/RoomsDTO.html":{},"classes/SupplierDTO.html":{},"classes/UserDTO.html":{},"properties.html":{}}}],["providers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["quantity",{"_index":209,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"classes/UpdateItem.html":{}}}],["query.ts",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":636,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["reduce",{"_index":203,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{},"miscellaneous/enumerations.html":{}}}],["reflect",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":93,"title":{"classes/RegisterDTO.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"coverage.html":{}}}],["repository",{"_index":592,"title":{},"body":{"index.html":{}}}],["req",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["request.headers",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["request.method",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["requestername",{"_index":396,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["required",{"_index":346,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{}}}],["requser",{"_index":298,"title":{},"body":{"injectables/ItemsService.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"miscellaneous/variables.html":{}}}],["room",{"_index":295,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/RoomsService.html":{},"miscellaneous/variables.html":{}}}],["roomid",{"_index":210,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{}}}],["roomiddto",{"_index":226,"title":{"classes/RoomIdDto.html":{}},"body":{"classes/CreateRoom.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"coverage.html":{}}}],["roomname",{"_index":304,"title":{},"body":{"injectables/ItemsService.html":{}}}],["rooms",{"_index":414,"title":{},"body":{"controllers/RoomsController.html":{}}}],["rooms.controller",{"_index":439,"title":{},"body":{"modules/RoomsModule.html":{}}}],["rooms.service",{"_index":421,"title":{},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{}}}],["rooms/rooms.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["roomscontroller",{"_index":412,"title":{"controllers/RoomsController.html":{}},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"coverage.html":{}}}],["roomsdto",{"_index":223,"title":{"classes/RoomsDTO.html":{}},"body":{"classes/CreateRoom.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"coverage.html":{}}}],["roomservice",{"_index":425,"title":{},"body":{"controllers/RoomsController.html":{}}}],["roomsmodule",{"_index":57,"title":{"modules/RoomsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoomsModule.html":{},"modules.html":{},"overview.html":{}}}],["roomsservice",{"_index":420,"title":{"injectables/RoomsService.html":{}},"body":{"controllers/RoomsController.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":610,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":585,"title":{},"body":{"index.html":{}}}],["secret",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":294,"title":{},"body":{"injectables/ItemsService.html":{}}}],["server",{"_index":586,"title":{},"body":{"index.html":{}}}],["side",{"_index":587,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"injectables/JwtGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDTO.html":{},"controllers/MovementRequestController.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"injectables/PrismaService.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":629,"title":{},"body":{"index.html":{}}}],["src/.../items.ts",{"_index":575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.ts",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:53",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth.ts",{"_index":344,"title":{},"body":{"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"coverage.html":{}}}],["src/auth/dto/auth.ts:12",{"_index":410,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/dto/auth.ts:6",{"_index":411,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/dto/auth.ts:9",{"_index":409,"title":{},"body":{"classes/RegisterDTO.html":{}}}],["src/auth/jwt.guard",{"_index":264,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/auth/jwt.guard.ts",{"_index":315,"title":{},"body":{"injectables/JwtGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/items/dto/items.ts",{"_index":194,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/items/dto/items.ts:12",{"_index":233,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:15",{"_index":230,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:18",{"_index":234,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:21",{"_index":235,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:24",{"_index":237,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:27",{"_index":232,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:30",{"_index":236,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:33",{"_index":229,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:36",{"_index":238,"title":{},"body":{"classes/Items.html":{}}}],["src/items/dto/items.ts:9",{"_index":231,"title":{},"body":{"classes/Items.html":{}}}],["src/items/items.controller.ts",{"_index":240,"title":{},"body":{"controllers/ItemsController.html":{},"coverage.html":{}}}],["src/items/items.controller.ts:27",{"_index":255,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.controller.ts:35",{"_index":252,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.controller.ts:44",{"_index":247,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.controller.ts:53",{"_index":258,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.controller.ts:66",{"_index":250,"title":{},"body":{"controllers/ItemsController.html":{}}}],["src/items/items.module.ts",{"_index":278,"title":{},"body":{"modules/ItemsModule.html":{}}}],["src/items/items.service.ts",{"_index":280,"title":{},"body":{"injectables/ItemsService.html":{},"coverage.html":{}}}],["src/items/items.service.ts:17",{"_index":285,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:35",{"_index":283,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:6",{"_index":282,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:63",{"_index":288,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:74",{"_index":284,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/items/items.service.ts:9",{"_index":287,"title":{},"body":{"injectables/ItemsService.html":{}}}],["src/logger",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"controllers/RoomsController.html":{},"controllers/UsersController.html":{}}}],["src/logger.ts",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":539,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/movement_request/movement_request.controller.ts",{"_index":348,"title":{},"body":{"controllers/MovementRequestController.html":{},"coverage.html":{}}}],["src/movement_request/movement_request.controller.ts:12",{"_index":356,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["src/movement_request/movement_request.controller.ts:21",{"_index":358,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["src/movement_request/movement_request.controller.ts:29",{"_index":353,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["src/movement_request/movement_request.controller.ts:38",{"_index":354,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["src/movement_request/movement_request.module.ts",{"_index":372,"title":{},"body":{"modules/MovementRequestModule.html":{}}}],["src/movement_request/movement_request.service.ts",{"_index":374,"title":{},"body":{"injectables/MovementRequestService.html":{},"coverage.html":{}}}],["src/movement_request/movement_request.service.ts:18",{"_index":382,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["src/movement_request/movement_request.service.ts:27",{"_index":379,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["src/movement_request/movement_request.service.ts:32",{"_index":385,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["src/movement_request/movement_request.service.ts:33",{"_index":381,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["src/movement_request/movement_request.service.ts:6",{"_index":378,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["src/movement_request/movement_request.service.ts:9",{"_index":384,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["src/prisma.service",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ItemsModule.html":{},"injectables/ItemsService.html":{},"modules/MovementRequestModule.html":{},"injectables/MovementRequestService.html":{},"modules/RoomsModule.html":{},"injectables/RoomsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/prisma.service.ts",{"_index":401,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma.service.ts:6",{"_index":404,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/rooms/dto/rooms.ts",{"_index":221,"title":{},"body":{"classes/CreateRoom.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"coverage.html":{}}}],["src/rooms/dto/rooms.ts:10",{"_index":435,"title":{},"body":{"classes/RoomsDTO.html":{}}}],["src/rooms/dto/rooms.ts:12",{"_index":431,"title":{},"body":{"classes/RoomsDTO.html":{}}}],["src/rooms/dto/rooms.ts:4",{"_index":433,"title":{},"body":{"classes/RoomsDTO.html":{}}}],["src/rooms/dto/rooms.ts:6",{"_index":434,"title":{},"body":{"classes/RoomsDTO.html":{}}}],["src/rooms/dto/rooms.ts:8",{"_index":432,"title":{},"body":{"classes/RoomsDTO.html":{}}}],["src/rooms/rooms.controller.ts",{"_index":413,"title":{},"body":{"controllers/RoomsController.html":{},"coverage.html":{}}}],["src/rooms/rooms.controller.ts:22",{"_index":417,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:31",{"_index":418,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:40",{"_index":415,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:49",{"_index":419,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.controller.ts:62",{"_index":416,"title":{},"body":{"controllers/RoomsController.html":{}}}],["src/rooms/rooms.module.ts",{"_index":438,"title":{},"body":{"modules/RoomsModule.html":{}}}],["src/rooms/rooms.service.ts",{"_index":440,"title":{},"body":{"injectables/RoomsService.html":{},"coverage.html":{}}}],["src/rooms/rooms.service.ts:15",{"_index":444,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:18",{"_index":442,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:21",{"_index":446,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:31",{"_index":443,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:6",{"_index":441,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/rooms/rooms.service.ts:8",{"_index":445,"title":{},"body":{"injectables/RoomsService.html":{}}}],["src/users/dto/supplier.ts",{"_index":454,"title":{},"body":{"classes/SupplierDTO.html":{},"coverage.html":{}}}],["src/users/dto/supplier.ts:5",{"_index":456,"title":{},"body":{"classes/SupplierDTO.html":{}}}],["src/users/dto/supplier.ts:7",{"_index":457,"title":{},"body":{"classes/SupplierDTO.html":{}}}],["src/users/dto/user.ts",{"_index":459,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["src/users/dto/user.ts:5",{"_index":460,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/users/users.controller.ts",{"_index":462,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:12",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:21",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:39",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:48",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":496,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:11",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:12",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:13",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:18",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:43",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:6",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":611,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":614,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":616,"title":{},"body":{"index.html":{}}}],["started",{"_index":580,"title":{"index.html":{}},"body":{}}],["starter",{"_index":591,"title":{},"body":{"index.html":{}}}],["statements",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":213,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MovementRequestService.html":{},"classes/UpdateItem.html":{}}}],["stay",{"_index":639,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateItem.html":{},"classes/CreateRoom.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"classes/RoomIdDto.html":{},"classes/RoomsDTO.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{}}}],["sudo",{"_index":600,"title":{},"body":{"index.html":{}}}],["super",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["supplier",{"_index":293,"title":{},"body":{"injectables/ItemsService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["supplierdto",{"_index":453,"title":{"classes/SupplierDTO.html":{}},"body":{"classes/SupplierDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["supplierid",{"_index":211,"title":{},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"classes/UpdateItem.html":{}}}],["support",{"_index":630,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":650,"title":{},"body":{"modules.html":{}}}],["table",{"_index":392,"title":{},"body":{"injectables/MovementRequestService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["tes",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["tesauth",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["tesauth(@req",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["tesauth(request",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["test",{"_index":619,"title":{},"body":{"index.html":{}}}],["test/.../prisma",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/prisma",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":622,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":621,"title":{},"body":{"index.html":{}}}],["tests",{"_index":618,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":628,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":407,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.userfindone(id.userid",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.itemservice.create(data",{"_index":272,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.itemservice.delete(id",{"_index":275,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.itemservice.findall",{"_index":270,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.itemservice.update(id",{"_index":273,"title":{},"body":{"controllers/ItemsController.html":{}}}],["this.jwtservice.sign",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.movementservice.deletemovement(id",{"_index":369,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["this.movementservice.findall",{"_index":365,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["this.movementservice.findone(id",{"_index":367,"title":{},"body":{"controllers/MovementRequestController.html":{}}}],["this.prisma.users.create",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findunique",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prismaservice.items.create",{"_index":296,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{}}}],["this.prismaservice.items.findmany",{"_index":291,"title":{},"body":{"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{}}}],["this.prismaservice.items.findunique",{"_index":289,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.prismaservice.items.update",{"_index":309,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.prismaservice.movement_request.delete",{"_index":389,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["this.prismaservice.movement_request.findunique",{"_index":386,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["this.prismaservice.movement_request_history_log.create",{"_index":300,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.prismaservice.room.create",{"_index":449,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.prismaservice.room.delete",{"_index":452,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.prismaservice.room.findmany",{"_index":448,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.prismaservice.room.findunique",{"_index":447,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.prismaservice.room.update",{"_index":450,"title":{},"body":{"injectables/RoomsService.html":{}}}],["this.prismaservice.supplier.create",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.supplier.findmany",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.supplier.findunique",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prismaservice.users.delete",{"_index":313,"title":{},"body":{"injectables/ItemsService.html":{}}}],["this.prismaservice.users.update",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.roomservice.create(data",{"_index":428,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomservice.delete(id",{"_index":430,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomservice.findall",{"_index":426,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomservice.findone(data",{"_index":427,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.roomservice.update(id",{"_index":429,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.userservice.addsupplier(data",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.deletesupplier(id",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findallsupplier",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.findonesupplier(id",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.updatesupplier(id",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MovementRequestService.html":{},"injectables/RoomsService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":640,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/ItemsService.html":{},"classes/LoginDTO.html":{},"injectables/MovementRequestService.html":{},"classes/RegisterDTO.html":{}}}],["tult",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":646,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"classes/RegisterDTO.html":{},"controllers/RoomsController.html":{},"classes/RoomsDTO.html":{},"injectables/RoomsService.html":{},"classes/SupplierDTO.html":{},"classes/UpdateItem.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":590,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["unit",{"_index":617,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MovementRequestController.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":658,"title":{},"body":{"properties.html":{}}}],["up",{"_index":602,"title":{},"body":{"index.html":{}}}],["update",{"_index":245,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"injectables/MovementRequestService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["update(id",{"_index":256,"title":{},"body":{"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"controllers/RoomsController.html":{},"injectables/RoomsService.html":{}}}],["update_at",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateitem",{"_index":216,"title":{"classes/UpdateItem.html":{}},"body":{"classes/CreateItem.html":{},"classes/ItemIdDTO.html":{},"classes/Items.html":{},"controllers/ItemsController.html":{},"injectables/ItemsService.html":{},"classes/UpdateItem.html":{},"coverage.html":{}}}],["updatemovement",{"_index":377,"title":{},"body":{"injectables/MovementRequestService.html":{}}}],["updatesupplier",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatesupplier(id",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["useguards",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{}}}],["useguards(jwtguard",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ItemsController.html":{}}}],["user",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["user).createdat",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["user).role",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["user).update_at",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["user).username",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":458,"title":{"classes/UserDTO.html":{}},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["userfindone",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["userfindone(id",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ItemsService.html":{},"classes/LoginDTO.html":{},"classes/RegisterDTO.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":297,"title":{},"body":{"injectables/ItemsService.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":497,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":461,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":58,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":483,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(id",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["validpassword",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":576,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":659,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":656,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":612,"title":{},"body":{"index.html":{}}}],["website",{"_index":644,"title":{},"body":{"index.html":{}}}],["winston",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["winston.createlogger",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.colorize",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.json",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["yogi",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you'd",{"_index":633,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ItemsModule.html":{},"modules/MovementRequestModule.html":{},"modules/RoomsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport logger from './logger';\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(@Req() request: Request): string {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nItemsModule\n\nItemsModule\n\nAppModule -->\n\nItemsModule->AppModule\n\n\n\n\n\nMovementRequestModule\n\nMovementRequestModule\n\nAppModule -->\n\nMovementRequestModule->AppModule\n\n\n\n\n\nRoomsModule\n\nRoomsModule\n\nAppModule -->\n\nRoomsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ItemsModule\n                        \n                        \n                            MovementRequestModule\n                        \n                        \n                            RoomsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { ItemsModule } from './items/items.module';\nimport { RoomsModule } from './rooms/rooms.module';\nimport { MovementRequestModule } from './movement_request/movement_request.module';\nimport { UsersModule } from './users/users.module';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  imports: [\n    AuthModule,\n    ItemsModule,\n    RoomsModule,\n    MovementRequestModule,\n    UsersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                tesAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDTO, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDTO, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        tesAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    tesAuth(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('tes')@ApiBearerAuth()@UseGuards(JwtGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Post, Get, UseGuards, Req } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { LoginDTO, RegisterDTO } from './dto/auth';\nimport logger from 'src/logger';\nimport { JwtGuard } from './jwt.guard';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('register')\n  async register(@Body() data: RegisterDTO, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: LoginDTO, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.authService.login(data);\n  }\n\n  @Get('tes')\n  @ApiBearerAuth()\n  @UseGuards(JwtGuard)\n  async tesAuth(@Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return 'tes auth bisa';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaService } from 'src/prisma.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n@Module({\n  imports: [\n    JwtModule.register({\n      global: true,\n      secret: process.env.SECRET_KEY,\n      signOptions: { expiresIn: '2h' },\n    }),\n  ],\n  providers: [AuthService, PrismaService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                userFindOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userFindOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    userFindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma.service';\nimport * as bcrypt from 'bcrypt';\n\nimport { JwtService } from '@nestjs/jwt';\nimport { LoginDTO, RegisterDTO } from './dto/auth';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwtService: JwtService,\n  ) {}\n\n  async login(data: LoginDTO) {\n    const dataUsername = data.username;\n    const user = await this.prisma.users.findUnique({\n      where: {\n        username: dataUsername,\n      },\n    });\n    if (!user) throw NotFoundException;\n    const validPassword = await bcrypt.compare(data.password, user.password);\n\n    if (!validPassword) throw new UnauthorizedException('invalid password');\n\n    return {\n      accessToken: this.jwtService.sign({ userId: user.id }),\n      username: user.username,\n      role: user.role,\n    };\n  }\n  async register(data: RegisterDTO) {\n    const hashPassword = await bcrypt.hash(data.password, 10);\n    data.password = hashPassword;\n    const user = this.prisma.users.create({ data });\n    const datas = {\n      username: (await user).username,\n      role: (await user).role,\n      created_at: (await user).createdAt,\n      update_at: (await user).update_at,\n    };\n    return {\n      datas,\n    };\n  }\n\n  async userFindOne(id: number) {\n    return this.prisma.users.findUnique({\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateItem.html":{"url":"classes/CreateItem.html","title":"class - CreateItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/dto/items.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(Items, ['id'])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType, PartialType, PickType } from '@nestjs/swagger';\nexport enum ItemType {\n  REDUCE = 'barang_stok',\n  NON_REDUCE = 'barang_sekali_pakai',\n}\nexport class Items {\n  @ApiProperty()\n  id?: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  quantity: number;\n\n  @ApiProperty()\n  roomId: number;\n\n  @ApiProperty()\n  supplierId: number;\n\n  @ApiProperty()\n  inputBy: number;\n\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty()\n  availbility: boolean;\n\n  @ApiProperty()\n  type: string;\n}\n\nexport class CreateItem extends OmitType(Items, ['id']) {}\nexport class UpdateItem extends PartialType(Items) {}\nexport class ItemIdDTO extends PickType(Items, ['id']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoom.html":{"url":"classes/CreateRoom.html","title":"class - CreateRoom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/dto/rooms.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(RoomsDTO, ['id'])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType, PickType } from '@nestjs/swagger';\n\nexport class RoomsDTO {\n  id?: number;\n  @ApiProperty()\n  name: string;\n  @ApiProperty()\n  building: string;\n  @ApiProperty()\n  number: string;\n  @ApiProperty()\n  address: string;\n}\n\nexport class CreateRoom extends OmitType(RoomsDTO, ['id']) {}\nexport class RoomIdDto extends PickType(RoomsDTO, ['id']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemIdDTO.html":{"url":"classes/ItemIdDTO.html","title":"class - ItemIdDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemIdDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/dto/items.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(Items, ['id'])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType, PartialType, PickType } from '@nestjs/swagger';\nexport enum ItemType {\n  REDUCE = 'barang_stok',\n  NON_REDUCE = 'barang_sekali_pakai',\n}\nexport class Items {\n  @ApiProperty()\n  id?: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  quantity: number;\n\n  @ApiProperty()\n  roomId: number;\n\n  @ApiProperty()\n  supplierId: number;\n\n  @ApiProperty()\n  inputBy: number;\n\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty()\n  availbility: boolean;\n\n  @ApiProperty()\n  type: string;\n}\n\nexport class CreateItem extends OmitType(Items, ['id']) {}\nexport class UpdateItem extends PartialType(Items) {}\nexport class ItemIdDTO extends PickType(Items, ['id']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Items.html":{"url":"classes/Items.html","title":"class - Items","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Items\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/dto/items.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                availbility\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                inputBy\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                roomId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                supplierId\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        availbility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inputBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        supplierId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/items/dto/items.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType, PartialType, PickType } from '@nestjs/swagger';\nexport enum ItemType {\n  REDUCE = 'barang_stok',\n  NON_REDUCE = 'barang_sekali_pakai',\n}\nexport class Items {\n  @ApiProperty()\n  id?: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  quantity: number;\n\n  @ApiProperty()\n  roomId: number;\n\n  @ApiProperty()\n  supplierId: number;\n\n  @ApiProperty()\n  inputBy: number;\n\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty()\n  availbility: boolean;\n\n  @ApiProperty()\n  type: string;\n}\n\nexport class CreateItem extends OmitType(Items, ['id']) {}\nexport class UpdateItem extends PartialType(Items) {}\nexport class ItemIdDTO extends PickType(Items, ['id']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ItemsController.html":{"url":"controllers/ItemsController.html","title":"controller - ItemsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ItemsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/items.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                items\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateItem, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/items/items.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: ItemIdDTO, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/items/items.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            ItemIdDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in src/items/items.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/items/items.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: ItemIdDTO, datas: UpdateItem, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/items/items.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            ItemIdDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datas\n                                            \n                                                            UpdateItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n  Req,\n} from '@nestjs/common';\nimport { ItemsService } from './items.service';\nimport { CreateItem, ItemIdDTO, UpdateItem } from './dto/items';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { JwtGuard } from 'src/auth/jwt.guard';\nimport logger from 'src/logger';\n\n@ApiTags('Items')\n@ApiBearerAuth()\n@UseGuards(JwtGuard)\n@Controller('items')\nexport class ItemsController {\n  constructor(private itemService: ItemsService) {}\n\n  @Get(':id')\n  async findOne(@Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n  }\n\n  @Get('/')\n  async findAll(@Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.itemService.findAll();\n  }\n\n  @Post()\n  async create(@Body() data: CreateItem, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.itemService.create(data);\n  }\n\n  @Patch(':id')\n  async update(\n    @Param() id: ItemIdDTO,\n    @Body() datas: UpdateItem,\n    @Req() request: Request,\n  ) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.itemService.update(id, datas);\n  }\n\n  @Delete(':id')\n  async delete(@Param() id: ItemIdDTO, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.itemService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ItemsModule.html":{"url":"modules/ItemsModule.html","title":"module - ItemsModule","body":"\n                   \n\n\n\n\n    Modules\n    ItemsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ItemsModule\n\n\n\ncluster_ItemsModule_providers\n\n\n\n\nItemsService\n\nItemsService\n\n\n\nItemsModule\n\nItemsModule\n\nItemsModule -->\n\nItemsService->ItemsModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nItemsModule -->\n\nPrismaService->ItemsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/items/items.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ItemsService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ItemsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ItemsService } from './items.service';\nimport { ItemsController } from './items.controller';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  providers: [ItemsService, PrismaService],\n  controllers: [ItemsController]\n})\nexport class ItemsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ItemsService.html":{"url":"injectables/ItemsService.html","title":"injectable - ItemsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ItemsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/items.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/items/items.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/items/items.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: ItemIdDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/items/items.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            ItemIdDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/items/items.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(data: ItemIdDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/items/items.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ItemIdDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: ItemIdDTO, datas: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/items/items.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            ItemIdDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                datas\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma.service';\nimport { CreateItem, ItemIdDTO, UpdateItem } from './dto/items';\n@Injectable()\nexport class ItemsService {\n  constructor(private prismaService: PrismaService) {}\n\n  async findOne(data: ItemIdDTO) {\n    return this.prismaService.items.findUnique({\n      where: {\n        id: data.id,\n      },\n    });\n  }\n\n  async findAll() {\n    return this.prismaService.items.findMany({\n      include: {\n        supplier: {\n          select: {\n            name: true,\n          },\n        },\n        room: {\n          select: {\n            name: true,\n            building: true,\n            address: true,\n          },\n        },\n      },\n    });\n  }\n  async create(data: any) {\n    const datas = await this.prismaService.items.create({\n      data: data,\n      include: {\n        supplier: true,\n        room: true,\n        users: {\n          select: {\n            username: true,\n            id: true,\n            role: true,\n          },\n        },\n      },\n    });\n\n    // const reqUser =\n    const log = await this.prismaService.movement_Request_History_Log.create({\n      data: {\n        inputName: datas.name,\n        inputBy: datas.users.username,\n        roomName: datas.room.name,\n        quantity: datas.quantity,\n        status: datas.status,\n      },\n    });\n    return { datas, log };\n  }\n  async update(id: ItemIdDTO, datas: any) {\n    const item = await this.prismaService.items.update({\n      where: {\n        id: id.id,\n      },\n      data: datas,\n    });\n    if (!item) throw new NotFoundException('item not found');\n\n    return item;\n  }\n  async delete(id: ItemIdDTO) {\n    const user = await this.prismaService.users.delete({\n      where: {\n        id: id.id,\n      },\n    });\n    if (!user) throw new NotFoundException('user not found');\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtGuard.html":{"url":"injectables/JwtGuard.html","title":"injectable - JwtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthService } from './auth.service';\nimport logger from 'src/logger';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.SECRET_KEY,\n    });\n  }\n\n  async validate(id: any) {\n    const user = await this.authService.userFindOne(id.userId);\n    if (user) {\n      return user;\n    } else {\n      logger.warn({\n        status: HttpStatus.UNAUTHORIZED,\n        msg: 'Unauthorized access',\n      });\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDTO.html":{"url":"classes/LoginDTO.html","title":"class - LoginDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(RegisterDTO, ['role'])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\n\nexport class RegisterDTO {\n  @ApiProperty({ required: true })\n  username: string;\n\n  @ApiProperty({ required: true })\n  password: string;\n\n  @ApiProperty({ required: true })\n  role: number;\n}\n\nexport class LoginDTO extends OmitType(RegisterDTO, ['role']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MovementRequestController.html":{"url":"controllers/MovementRequestController.html","title":"controller - MovementRequestController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MovementRequestController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/movement_request/movement_request.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                movement-request\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                getAll\n                            \n                            \n                                    \n                                    Async\n                                getOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/movement_request/movement_request.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/movement_request/movement_request.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/movement_request/movement_request.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOne(id: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/movement_request/movement_request.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Delete, Param, Req } from '@nestjs/common';\nimport { MovementRequestService } from './movement_request.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport logger from 'src/logger';\n\n@ApiTags('MovementRequest')\n@Controller('movement-request')\nexport class MovementRequestController {\n  constructor(private movementService: MovementRequestService) {}\n\n  @Get()\n  async getAll(@Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.movementService.findAll();\n  }\n\n  @Get(':id')\n  async getOne(@Param() id: number, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.movementService.findOne(id);\n  }\n\n  async create(@Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    // const items = await this;\n  }\n\n  @Delete(':id')\n  async delete(@Param() id: number, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.movementService.deleteMovement(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MovementRequestModule.html":{"url":"modules/MovementRequestModule.html","title":"module - MovementRequestModule","body":"\n                   \n\n\n\n\n    Modules\n    MovementRequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MovementRequestModule\n\n\n\ncluster_MovementRequestModule_providers\n\n\n\n\nMovementRequestService\n\nMovementRequestService\n\n\n\nMovementRequestModule\n\nMovementRequestModule\n\nMovementRequestModule -->\n\nMovementRequestService->MovementRequestModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nMovementRequestModule -->\n\nPrismaService->MovementRequestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/movement_request/movement_request.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MovementRequestService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MovementRequestController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MovementRequestController } from './movement_request.controller';\nimport { MovementRequestService } from './movement_request.service';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  imports: [],\n  controllers: [MovementRequestController],\n  providers: [MovementRequestService, PrismaService],\n})\nexport class MovementRequestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MovementRequestService.html":{"url":"injectables/MovementRequestService.html","title":"injectable - MovementRequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MovementRequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/movement_request/movement_request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMovement\n                            \n                            \n                                    Async\n                                deleteMovement\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateMovement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/movement_request/movement_request.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMovement\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMovement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/movement_request/movement_request.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteMovement\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMovement(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/movement_request/movement_request.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/movement_request/movement_request.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/movement_request/movement_request.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMovement\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMovement()\n                \n            \n\n\n                    \n                        \n                            Defined in src/movement_request/movement_request.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\n\nimport { PrismaService } from 'src/prisma.service';\n\n@Injectable()\nexport class MovementRequestService {\n  constructor(private prismaService: PrismaService) {}\n\n  async findOne(id: number) {\n    const movement = await this.prismaService.movement_Request.findUnique({\n      where: {\n        id: id,\n      },\n    });\n    if (!movement) throw new NotFoundException('movement not found');\n    return movement;\n  }\n  async findAll() {\n    const items = await this.prismaService.items.findMany({\n      where: {\n        availbility: true,\n      },\n    });\n\n    return { items };\n  }\n  async createMovement() {\n    // const items = await this.prismaService.items.create();\n    // console.log(items);\n    // return items;\n  }\n  async updateMovement() {}\n  async deleteMovement(id: number) {\n    const movement = await this.prismaService.movement_Request.delete({\n      where: {\n        id: id,\n      },\n    });\n    if (!movement) throw new NotFoundException('movement request not found');\n    return movement;\n  }\n}\n\n// 1.list all data di table where availbility true\n// 2.if make movement request then update item ->\n// status -> pending\n// availbility -> false\n// requesterName -> diisi nama requesterName\n// approvedBy -> bisa diisi null\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDTO.html":{"url":"classes/RegisterDTO.html","title":"class - RegisterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\n\nexport class RegisterDTO {\n  @ApiProperty({ required: true })\n  username: string;\n\n  @ApiProperty({ required: true })\n  password: string;\n\n  @ApiProperty({ required: true })\n  role: number;\n}\n\nexport class LoginDTO extends OmitType(RegisterDTO, ['role']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomIdDto.html":{"url":"classes/RoomIdDto.html","title":"class - RoomIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoomIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/dto/rooms.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PickType(RoomsDTO, ['id'])\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType, PickType } from '@nestjs/swagger';\n\nexport class RoomsDTO {\n  id?: number;\n  @ApiProperty()\n  name: string;\n  @ApiProperty()\n  building: string;\n  @ApiProperty()\n  number: string;\n  @ApiProperty()\n  address: string;\n}\n\nexport class CreateRoom extends OmitType(RoomsDTO, ['id']) {}\nexport class RoomIdDto extends PickType(RoomsDTO, ['id']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomsController.html":{"url":"controllers/RoomsController.html","title":"controller - RoomsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/rooms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rooms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateRoom, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/rooms/rooms.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateRoom\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/rooms/rooms.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/rooms/rooms.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(data: RoomIdDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/rooms/rooms.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RoomIdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, data: any, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/rooms/rooms.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport {\n  Controller,\n  Post,\n  Get,\n  Patch,\n  Delete,\n  Body,\n  Param,\n  Req,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoomsService } from './rooms.service';\nimport { CreateRoom, RoomIdDto } from './dto/rooms';\nimport logger from 'src/logger';\n\n@ApiTags('rooms')\n@Controller('rooms')\nexport class RoomsController {\n  constructor(private roomService: RoomsService) {}\n  @Get()\n  async findAll(@Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.roomService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(data: RoomIdDto, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.roomService.findOne(data);\n  }\n\n  @Post()\n  async create(@Body() data: CreateRoom, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.roomService.create(data);\n  }\n\n  @Patch()\n  async update(\n    @Param() id: number,\n    @Body() data: any,\n    @Req() request: Request,\n  ) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.roomService.update(id, data);\n  }\n\n  @Delete(':id')\n  async delete(@Param() id: number, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.roomService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoomsDTO.html":{"url":"classes/RoomsDTO.html","title":"class - RoomsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoomsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/dto/rooms.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                building\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rooms/dto/rooms.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        building\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rooms/dto/rooms.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/rooms/dto/rooms.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rooms/dto/rooms.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/rooms/dto/rooms.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType, PickType } from '@nestjs/swagger';\n\nexport class RoomsDTO {\n  id?: number;\n  @ApiProperty()\n  name: string;\n  @ApiProperty()\n  building: string;\n  @ApiProperty()\n  number: string;\n  @ApiProperty()\n  address: string;\n}\n\nexport class CreateRoom extends OmitType(RoomsDTO, ['id']) {}\nexport class RoomIdDto extends PickType(RoomsDTO, ['id']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoomsModule.html":{"url":"modules/RoomsModule.html","title":"module - RoomsModule","body":"\n                   \n\n\n\n\n    Modules\n    RoomsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoomsModule\n\n\n\ncluster_RoomsModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nRoomsModule\n\nRoomsModule\n\nRoomsModule -->\n\nPrismaService->RoomsModule\n\n\n\n\n\nRoomsService\n\nRoomsService\n\nRoomsModule -->\n\nRoomsService->RoomsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rooms/rooms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            RoomsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoomsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoomsService } from './rooms.service';\nimport { RoomsController } from './rooms.controller';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  providers: [RoomsService, PrismaService],\n  controllers: [RoomsController],\n})\nexport class RoomsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomsService.html":{"url":"injectables/RoomsService.html","title":"injectable - RoomsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rooms/rooms.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/rooms/rooms.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateRoom)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rooms/rooms.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateRoom\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rooms/rooms.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/rooms/rooms.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(data: RoomIdDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rooms/rooms.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RoomIdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/rooms/rooms.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma.service';\nimport { CreateRoom, RoomIdDto } from './dto/rooms';\n\n@Injectable()\nexport class RoomsService {\n  constructor(private prismaService: PrismaService) {}\n  async findOne(data: RoomIdDto) {\n    return this.prismaService.room.findUnique({\n      where: {\n        id: data.id,\n      },\n    });\n  }\n  async findAll() {\n    return this.prismaService.room.findMany();\n  }\n  async create(data: CreateRoom) {\n    return this.prismaService.room.create({ data });\n  }\n  async update(id: number, data: any) {\n    const room = await this.prismaService.room.update({\n      where: {\n        id: id,\n      },\n      data: data,\n    });\n    if (!room) throw new NotFoundException('room not found');\n    return room;\n  }\n  async delete(id: number) {\n    const room = await this.prismaService.room.delete({\n      where: {\n        id: id,\n      },\n    });\n    if (!room) throw new NotFoundException('room not found');\n    return room;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SupplierDTO.html":{"url":"classes/SupplierDTO.html","title":"class - SupplierDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SupplierDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/supplier.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/supplier.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/supplier.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SupplierDTO {\n  @ApiProperty()\n  name: string;\n  @ApiProperty()\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateItem.html":{"url":"classes/UpdateItem.html","title":"class - UpdateItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/items/dto/items.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(Items)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType, PartialType, PickType } from '@nestjs/swagger';\nexport enum ItemType {\n  REDUCE = 'barang_stok',\n  NON_REDUCE = 'barang_sekali_pakai',\n}\nexport class Items {\n  @ApiProperty()\n  id?: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  quantity: number;\n\n  @ApiProperty()\n  roomId: number;\n\n  @ApiProperty()\n  supplierId: number;\n\n  @ApiProperty()\n  inputBy: number;\n\n  @ApiProperty()\n  status: string;\n\n  @ApiProperty()\n  availbility: boolean;\n\n  @ApiProperty()\n  type: string;\n}\n\nexport class CreateItem extends OmitType(Items, ['id']) {}\nexport class UpdateItem extends PartialType(Items) {}\nexport class ItemIdDTO extends PickType(Items, ['id']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDTO {\n  @ApiProperty()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createSupplier\n                            \n                            \n                                    \n                                    Async\n                                deleteSupplier\n                            \n                            \n                                    \n                                    Async\n                                editSupplier\n                            \n                            \n                                    \n                                    Async\n                                findAllSupplier\n                            \n                            \n                                    \n                                    Async\n                                findOneSupplier\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSupplier(data: any, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('supplier')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSupplier(id: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('supplier')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        editSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    editSupplier(id: number, data: any, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('supplier')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSupplier(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('supplier')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOneSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneSupplier(id: number, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('supplier/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Patch, Delete, Req } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport logger from 'src/logger';\n\n@ApiTags('Users And Supplier')\n@Controller('users')\nexport class UsersController {\n  constructor(private userService: UsersService) {}\n\n  @Get('supplier')\n  async findAllSupplier(@Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.userService.findAllSupplier();\n  }\n\n  @Get('supplier/:id')\n  async findOneSupplier(id: number, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.userService.findOneSupplier(id);\n  }\n\n  @Post('supplier')\n  async createSupplier(data: any, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.userService.addSupplier(data);\n  }\n\n  @Patch('supplier')\n  async editSupplier(id: number, data: any, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.userService.updateSupplier(id, data);\n  }\n\n  @Delete('supplier')\n  async deleteSupplier(id: number, @Req() request: Request) {\n    logger.info({\n      'request method': request.method,\n      'request header': request.headers,\n    });\n    return this.userService.deleteSupplier(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  providers: [UsersService, PrismaService],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addSupplier\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteSupplier\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllSupplier\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneSupplier\n                            \n                            \n                                    Async\n                                updateSupplier\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    addSupplier(data: SupplierDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            SupplierDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteSupplier(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSupplier()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneSupplier(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSupplier\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSupplier(id: number, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma.service';\nimport { SupplierDTO } from './dto/supplier';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prismaService: PrismaService) {}\n\n  async findAll() {}\n  async findOne() {}\n  async createUser() {}\n  async updateUser() {}\n  async deleteUser() {}\n\n  async findAllSupplier() {\n    return this.prismaService.supplier.findMany();\n  }\n  async findOneSupplier(id: number) {\n    return this.prismaService.supplier.findUnique({\n      where: {\n        id: id,\n      },\n    });\n  }\n  async addSupplier(data: SupplierDTO) {\n    return this.prismaService.supplier.create({\n      data: {\n        name: data.name,\n        phone: data.phone,\n      },\n    });\n  }\n  async updateSupplier(id: number, data: any) {\n    const user = await this.prismaService.users.update({\n      where: {\n        id: id,\n      },\n      data: data,\n    });\n    if (!user) throw new NotFoundException('user not found');\n    return user;\n  }\n  async deleteSupplier(id: number) {\n    return this.prismaService.supplier.findUnique({\n      where: {\n        id: id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.ts\n            \n            class\n            LoginDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.ts\n            \n            class\n            RegisterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.guard.ts\n            \n            injectable\n            JwtGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/items/dto/items.ts\n            \n            class\n            CreateItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/items/dto/items.ts\n            \n            class\n            ItemIdDTO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/items/dto/items.ts\n            \n            class\n            Items\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/items/dto/items.ts\n            \n            class\n            UpdateItem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/items/items.controller.ts\n            \n            controller\n            ItemsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/items/items.service.ts\n            \n            injectable\n            ItemsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                        src/logger.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/movement_request/movement_request.controller.ts\n            \n            controller\n            MovementRequestController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/movement_request/movement_request.service.ts\n            \n            injectable\n            MovementRequestService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/rooms/dto/rooms.ts\n            \n            class\n            CreateRoom\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rooms/dto/rooms.ts\n            \n            class\n            RoomIdDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rooms/dto/rooms.ts\n            \n            class\n            RoomsDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rooms/rooms.controller.ts\n            \n            controller\n            RoomsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rooms/rooms.service.ts\n            \n            injectable\n            RoomsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/supplier.ts\n            \n            class\n            SupplierDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/user.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        test/prisma-insert-query.ts\n            \n            variable\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        test/prisma-insert-query.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.2\n        \n            @prisma/adapter-pg : ^5.19.1\n        \n            @prisma/client : ^5.19.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.13.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            winston : ^3.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ItemType   (src/.../items.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/items/dto/items.ts\n    \n        \n            \n                \n                    \n                        \n                        ItemType\n                    \n                \n                        \n                            \n                                 REDUCE\n                            \n                        \n                        \n                            \n                                Value : barang_stok\n                            \n                        \n                        \n                            \n                                 NON_REDUCE\n                            \n                        \n                        \n                            \n                                Value : barang_sekali_pakai\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning docker container for database\nExample :sudo docker-compose up -dRunning migrate prisma orm for database\nExample :npx prisma migrate devRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ItemsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MovementRequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoomsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ItemsModule\n\n\n\ncluster_ItemsModule_providers\n\n\n\ncluster_MovementRequestModule\n\n\n\ncluster_MovementRequestModule_providers\n\n\n\ncluster_RoomsModule\n\n\n\ncluster_RoomsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nItemsModule\n\nItemsModule\n\nAppModule -->\n\nItemsModule->AppModule\n\n\n\n\n\nMovementRequestModule\n\nMovementRequestModule\n\nAppModule -->\n\nMovementRequestModule->AppModule\n\n\n\n\n\nRoomsModule\n\nRoomsModule\n\nAppModule -->\n\nRoomsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\nItemsModule -->\n\nPrismaService->ItemsModule\n\n\n\nMovementRequestModule -->\n\nPrismaService->MovementRequestModule\n\n\n\nRoomsModule -->\n\nPrismaService->RoomsModule\n\n\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nItemsService\n\nItemsService\n\nItemsModule -->\n\nItemsService->ItemsModule\n\n\n\n\n\nMovementRequestService\n\nMovementRequestService\n\nMovementRequestModule -->\n\nMovementRequestService->MovementRequestModule\n\n\n\n\n\nRoomsService\n\nRoomsService\n\nRoomsModule -->\n\nRoomsService->RoomsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            main   (test/.../prisma-insert-query.ts)\n                        \n                        \n                            prisma   (test/.../prisma-insert-query.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.json(),\n    winston.format.colorize(),\n  ),\n  transports: [\n    new winston.transports.Console(),\n    new winston.transports.File({ filename: 'logs/app.log' }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    test/prisma-insert-query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const password = 'coba';\n  const hashPassword = await bcrypt.hash(password, 10);\n  const room = await prisma.room.create({\n    data: {\n      name: 'gudang',\n      building: 'TULT',\n      number: '0650',\n      address: 'Jl.Telekomunikasi no 1',\n    },\n  });\n  const supplier = await prisma.supplier.create({\n    data: {\n      phone: '1122233',\n      name: 'yogi',\n    },\n  });\n  const user = await prisma.users.create({\n    data: {\n      username: 'coba',\n      password: hashPassword,\n      role: 0,\n    },\n  });\n  return { room, supplier, user };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
