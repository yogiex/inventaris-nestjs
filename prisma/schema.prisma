// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int @id @default(autoincrement())
  username String
  password String 
  role Int 
  movement_requests Movement_Request[]
  createdAt DateTime @default(now())
  update_at DateTime  @updatedAt
}

model Items {
  id Int @id @default(autoincrement())
  name String
  description String
  quantity Int
  roomId Int @unique 
  room Room @relation(fields: [roomId], references: [id])  
  created_at DateTime @default(now())
  update_at DateTime  @updatedAt
  movement_request Movement_Request?
}

model Room {
  id Int @id @default(autoincrement())
  name String
  building String
  number String
  address String
  created_at DateTime @default(now())
  update_at DateTime @updatedAt
  items Items?
}

model Supplier {
  id Int @id @default(autoincrement())
  name String
  phone String
  created_at DateTime @default(now())
  update_at DateTime @updatedAt
}

model Movement_Request {
  id Int @id @default(autoincrement())
  title String
  requesterName String
  body String
  itemId Int @unique
  itemMove Items @relation(fields: [itemId], references: [id])
  status String
  approvedBy Users @relation(fields: [userId], references: [id])
  userId Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}